************************************************************************
*     0-11-stc                                                         *
*     Ajuste de datos a una linea recta.                               *
*     Sebasti n Torrente Carrillo                                      *
*     A 2/3/2005                                                       *
************************************************************************

C  Este programa hace un ajuste a una linea recta a partir de unos datos
C  contenidos en un documento en formato *.in y da los valores del
C  ajuste en un fichero de nombre 0-11-stc.out.
C  Como esta funci¢n es muy util, realizaremos los calculos del ajuste
C  en una subrutina de nombre ajlineal, de este modo podremos usarla
C  en otros programas que realizemos.
C  Los datos se ofrecer n en un formato de dos columnas separados por un
C  espacio, antes de introducir los datos se incluir  un numero n que
C  indique el numero de datos que posee el documento.

* Declaraci¢n de variables.
      implicit real*8 (a-h,o-z)
      real*8 a,b,err_a,err_b
*Llamamos a nuestra subrutina.
      call ajlineal(a,err_a,b,err_b,ndat)
*Vamos a presentar los resultados de dos formas:

*Primero generaremos un documento de datos de salida que adem s pueda
*ser leido por GNUplot y as¡ dibuje nuestra gr fica.
      write(*,*)'Resultados del ajuste a una linea recta a partir'
      write(*,*)'de los datos del documento 0-11-stc.in'
      write(*,*)' y=a*x+b'
      write(*,*)' a=',a,' con un error de ',err_a
      write(*,*)' b=',b,' con un error de ',err_b
      write(*,*)' y=',a,'*x+',b
      write(*,*)
      write(*,*)'ESTE PROGRAMA HA FINALIZADO'

      open(200,file='0-11-stc.out', status='unknown')
      write(200,*)'##################################################'
      write(200,*)'#Resultados del ajuste a una linea recta a partir#'
      write(200,*)'#de los datos del documento 0-11-stc.in          #'
      write(200,*)'#       y=a*x+b                                  #'
      write(200,*)'##################################################'
      write(200,*)
      write(200,*)'# a=',a,' con un error de ',err_a
      write(200,*)'# b=',b,' con un error de ',err_b
      write(200,*)'# y=',a,'*x+',b
      write(200,*)'set grid'
      write(200,*)'plot y=',a,'*x+',b
      close (200)
*Vamos a escribir tambi‚n los datos en pantalla, as¡ sabremos si todo ha
*salido bien.

      stop
      end
*Esta es la subrutina que nos calcular  los datos necesarios para el
*ajuste a una linea recta.
      subroutine ajlineal(a,err_a,b,err_b,ndat)

      implicit real*8 (a-h,o-z)
*Declaramos los valores de x e y como arrays, como no sabemos a priori
*la cantidad de pares de datos de los que disponemos haremos que sean
*arrays de dimensi¢n n y luego definiremos n al leerlo en el documento.
      dimension x(ndat),y(ndat)
      integer i


*Necesitamos ahora abrir el documento donde tenemos los datos, este
*tiene el nombre '0-11-stc.in' y ha de tener el siguiente formato:
*     n =numero de datos
*     x(1) y(1)
*     x(2) y(2)
*     ...  ...
*     x(n) y(n)
      open(100,file='0-11-stc.in', blank='null') !Se¤alamos que los
                                              !espacios no cuentan.
      read(100,*) ndat !Leemos el numero de datos.
*Ahora leeremos los datos de cada array, para ellos empleamos un bucle.

      do i=1,ndat
        read(100,*) x(i),y(i)
      enddo
*Ahora que tenemos los datos podemos obtener a y b con sus errores.
*Como no necesitamos m s el archivo con los datos de entrada lo cerramos
      close (100)

*Para calcular los datos necesitamos las medias de x e y.
!      real*8 a,b,err_a,err_b,xmed,ymed,D
      a=0.0
      b=0.0
      err_a=0.0
      err_b=0.0
      xmed=0.0
      ymed=0.0
      D=0 !Esta variable la hemos declarado con mayusculas para que tenga
          !el mismo nombre que la D del enunciado.

      do i=1,ndat
        xmed=xmed+x(i)
        ymed=ymed+y(i)
      enddo

      xmed=xmed/real(ndat) !La divisi¢n la realizamos fuera del bucle
      ymed=ymed/real(ndat) !para ahorrarle calculos al ordenador.

*Para calcular a y b ya solo necesitamos D=sum(x(i)-<x>)**2

      do i=1,ndat
        D=D+(x(i)-xmed)**2.0
      enddo

!Ahora calculemos a:

      do i=1,ndat
        a=a+(x(i)-xmed)*y(i) !Primero sumamos todos los t‚rminos
      enddo
      a=a/D                  !Y despu‚s lo dividimos por D.

!Una vez que hemos obtenido a, obtener b es muy facil.

      b=ymed-a*xmed

!Ya solo nos queda calcular los errores err_a y err_b, como ambos
!errores tienen un termino com£n sum[d(i)]/(n-2). POr lo que antes de
!Calcular los errores de a y b calculamos ese sumatorio.

      real d=0
      do i=1,ndat
        d=d+(y(1)-a*(x(i))-b)**2.0
      enddo
      d=d/(real(ndat)-2.0)

      err_a=sqrt(d/D)

      err_b=sqrt(d*(xmed**2.0/D+1.0/real(ndat)))

      return
      end
